// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`docs:helper constructParamTable should build a table for param1 1`] = `
"| Param | Type | Default | Description |
| ------ | ------ | ------ | ------ |
| type | string |  | 
| options.delimiter | string | ',' | 
| options.lastIsTarget |  | true | 
| options.targetType | string | 'float' | 
| options.trainType | string | 'float' | 
"
`;

exports[`docs:helper constructParamTable should build a table for params with Type1DMatrix 1`] = `
"| Param | Type | Default | Description |
| ------ | ------ | ------ | ------ |
| X | number[] or number[][] | null | training values
| y | number[] or number[][] | null | target values
"
`;

exports[`docs:helper constructParamTable should build table for params with Type2DMatrix 1`] = `
"| Param | Type | Default | Description |
| ------ | ------ | ------ | ------ |
| X | number[][] | null | Matrix of data
| y | number[] | null | Matrix of targets
"
`;

exports[`docs:helper constructParamTable should build table for params with Type2DMatrix of multiple types 1`] = `
"| Param | Type | Default | Description |
| ------ | ------ | ------ | ------ |
| X | number[][] | null | array-like or sparse matrix of shape = [n_samples, n_features]
| y | unknown | null | array-like, shape = [n_samples] or [n_samples, n_outputs]
"
`;

exports[`docs:helper docs:test:renderNewLine should render a newline upon calling the method 1`] = `
"
"
`;

exports[`docs:helper filterByKind should filter all constructor 1`] = `
{
  "payload": [
    {
      "comment": {
        "shortText": "model training epochs",
      },
      "flags": {},
      "id": 724,
      "kind": 512,
      "kindString": "Constructor",
      "name": "zzzz",
      "sources": [
        {
          "character": 10,
          "fileName": "linear_model/stochastic_gradient.ts",
          "line": 126,
        },
      ],
      "type": {
        "name": "number",
        "type": "intrinsic",
      },
    },
  ],
  "result": true,
}
`;

exports[`docs:helper filterByKind should filter all public Variables 1`] = `
{
  "payload": [
    {
      "comment": {
        "shortText": "Model training weights",
      },
      "id": 725,
      "kind": 32,
      "kindString": "Variable",
      "name": "weights",
      "sources": [
        {
          "character": 11,
          "fileName": "linear_model/stochastic_gradient.ts",
          "line": 130,
        },
      ],
      "type": {
        "elementType": {
          "name": "number",
          "type": "intrinsic",
        },
        "type": "array",
      },
    },
  ],
  "result": true,
}
`;

exports[`docs:helper filterByTag should find a tag example 1`] = `
{
  "payload": [
    {
      "tag": "example",
      "text": "
import { SGDRegressor } from 'kalimdor/linear_model';
const reg = new SGDRegressor();
const X = [[0., 0.], [1., 1.]];
const y = [0, 1];
reg.fit(X, y);
reg.predict([[2., 2.]]); // result: [ 1.281828588248001 ]

",
    },
  ],
  "result": true,
}
`;

exports[`docs:helper isSignatureValid should return true for the 2nd child 1`] = `
{
  "flags": {},
  "id": 3,
  "kind": 512,
  "name": "constructor",
  "signatures": [
    {
      "flags": {},
      "id": 4,
      "kind": 16384,
      "name": "KMeans",
      "parameters": [
        {
          "defaultValue": "...",
          "flags": {},
          "id": 5,
          "kind": 32768,
          "name": "__namedParameters",
          "type": {
            "declaration": {
              "children": [
                {
                  "defaultValue": "'euclidean'",
                  "flags": {
                    "isOptional": true,
                  },
                  "id": 8,
                  "kind": 1024,
                  "name": "distance",
                  "sources": [
                    {
                      "character": 6,
                      "fileName": "cluster/k_means.ts",
                      "line": 42,
                      "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L42",
                    },
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "euclidean",
                      },
                      {
                        "type": "literal",
                        "value": "manhattan",
                      },
                    ],
                  },
                  "variant": "declaration",
                },
                {
                  "defaultValue": "3",
                  "flags": {},
                  "id": 7,
                  "kind": 1024,
                  "name": "k",
                  "sources": [
                    {
                      "character": 6,
                      "fileName": "cluster/k_means.ts",
                      "line": 41,
                      "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L41",
                    },
                  ],
                  "type": {
                    "name": "number",
                    "type": "intrinsic",
                  },
                  "variant": "declaration",
                },
                {
                  "defaultValue": "300",
                  "flags": {
                    "isOptional": true,
                  },
                  "id": 9,
                  "kind": 1024,
                  "name": "maxIteration",
                  "sources": [
                    {
                      "character": 6,
                      "fileName": "cluster/k_means.ts",
                      "line": 43,
                      "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L43",
                    },
                  ],
                  "type": {
                    "name": "number",
                    "type": "intrinsic",
                  },
                  "variant": "declaration",
                },
                {
                  "defaultValue": "0",
                  "flags": {
                    "isOptional": true,
                  },
                  "id": 10,
                  "kind": 1024,
                  "name": "randomState",
                  "sources": [
                    {
                      "character": 6,
                      "fileName": "cluster/k_means.ts",
                      "line": 44,
                      "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L44",
                    },
                  ],
                  "type": {
                    "name": "number",
                    "type": "intrinsic",
                  },
                  "variant": "declaration",
                },
              ],
              "flags": {},
              "groups": [
                {
                  "children": [
                    8,
                    7,
                    9,
                    10,
                  ],
                  "title": "Properties",
                },
              ],
              "id": 6,
              "kind": 65536,
              "name": "__type",
              "sources": [
                {
                  "character": 7,
                  "fileName": "cluster/k_means.ts",
                  "line": 40,
                  "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L40",
                },
              ],
              "variant": "declaration",
            },
            "type": "reflection",
          },
          "variant": "param",
        },
      ],
      "sources": [
        {
          "character": 2,
          "fileName": "cluster/k_means.ts",
          "line": 34,
          "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L34",
        },
      ],
      "type": {
        "name": "KMeans",
        "package": "machinelearn",
        "target": 2,
        "type": "reference",
      },
      "variant": "signature",
    },
  ],
  "sources": [
    {
      "character": 2,
      "fileName": "cluster/k_means.ts",
      "line": 34,
      "url": "https://github.com/machinelearnjs/machinelearnjs/blob/052527a63850aa38627c13eb0273cef6c858d085/src/lib/cluster/k_means.ts#L34",
    },
  ],
  "variant": "declaration",
}
`;

exports[`docs:helper renderMethodReturnType should build a toJSON return type 1`] = `
"| Param | Type | Description |
| ------ | ------ | ------ |
| classes | any[] | classes used for KNN tree
| distance | any | Choice of distance function, should choose between euclidean | manhattan
| k | number | Number of neighbors to classify
| tree | any | KNN tree
| type | string | Type of algorithm to use, choose between kdtree(default) | balltree | simple
"
`;
