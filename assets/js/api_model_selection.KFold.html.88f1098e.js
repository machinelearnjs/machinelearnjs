"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2077],{5799:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>p,data:()=>l});var t=a(2288);const e={},p=(0,a(7433).A)(e,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,s[0]||(s[0]=[(0,t.Fv)('<h1 id="model-selection-kfold" tabindex="-1"><a class="header-anchor" href="#model-selection-kfold"><span>model_selection.KFold</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> KFold <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/model_selection&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> kFold <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KFold</span><span class="token punctuation">(</span><span class="token punctuation">{</span> k<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">X1</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kFold<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token constant">X1</span><span class="token punctuation">,</span> <span class="token constant">X1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">/* [ { trainIndex: [ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 ],</span>\n<span class="line">*  testIndex: [ 0, 1, 2, 3 ] },</span>\n<span class="line">* { trainIndex: [ 0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 ],</span>\n<span class="line">*  testIndex: [ 4, 5, 6, 7 ] },</span>\n<span class="line">* { trainIndex: [ 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19 ],</span>\n<span class="line">*  testIndex: [ 8, 9, 10, 11 ] },</span>\n<span class="line">* { trainIndex: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19 ],</span>\n<span class="line">*  testIndex: [ 12, 13, 14, 15 ] },</span>\n<span class="line">* { trainIndex: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ],</span>\n<span class="line">*  testIndex: [ 16, 17, 18, 19 ] } ]</span>\n<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><a href="#%CE%BB-split">split</a></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>KFold</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/model_selection/_split.ts#L43" target="_blank" rel="noopener noreferrer">model_selection/_split.ts:43</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.k</td><td>number</td><td>2</td><td></td></tr><tr><td>options.shuffle</td><td>boolean</td><td>false</td><td></td></tr></tbody></table><p><strong>Returns:</strong> KFold</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-split" tabindex="-1"><a class="header-anchor" href="#λ-split"><span>λ split</span></a></h3><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/model_selection/_split.ts#L57" target="_blank" rel="noopener noreferrer">model_selection/_split.ts:57</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>any[]</td><td>null</td><td>Training data, where n_samples is the number of samples and n_features is the number of features.</td></tr><tr><td>y</td><td>any[]</td><td>null</td><td>The target variable for supervised learning problems.</td></tr></tbody></table><p><strong>Returns:</strong></p><p>any[]</p>',23)]))}]]),l=JSON.parse('{"path":"/api/model_selection.KFold.html","title":"model_selection.KFold","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ split","slug":"λ-split","link":"#λ-split","children":[]}],"git":{},"filePathRelative":"api/model_selection.KFold.md"}')}}]);