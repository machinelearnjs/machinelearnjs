"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2252],{3202:(n,s,t)=>{t.r(s),t.d(s,{comp:()=>p,data:()=>r});var a=t(2288);const e={},p=(0,t(7433).A)(e,[["render",function(n,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="cluster-kmeans" tabindex="-1"><a class="header-anchor" href="#cluster-kmeans"><span>cluster.KMeans</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> KMeans <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/cluster&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> kmean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KMeans</span><span class="token punctuation">(</span><span class="token punctuation">{</span> k<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> clusters <span class="token operator">=</span> kmean<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> kmean<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// results in: [0, 1]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fromjson">fromJSON</a></p></li><li><p><a href="#%CE%BB-predict">predict</a></p></li><li><p><a href="#%CE%BB-tojson">toJSON</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>KMeans</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/cluster/k_means.ts#L34" target="_blank" rel="noopener noreferrer">cluster/k_means.ts:34</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.distance</td><td></td><td>&#39;euclidean&#39;</td><td></td></tr><tr><td>options.k</td><td>number</td><td>3</td><td></td></tr><tr><td>options.maxIteration</td><td>number</td><td>300</td><td></td></tr><tr><td>options.randomState</td><td>number</td><td>0</td><td></td></tr></tbody></table><p><strong>Returns:</strong> KMeans</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Compute k-means clustering.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/cluster/k_means.ts#L75" target="_blank" rel="noopener noreferrer">cluster/k_means.ts:75</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>array-like or sparse matrix of shape = [n_samples, n_features]</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fromjson" tabindex="-1"><a class="header-anchor" href="#λ-fromjson"><span>λ fromJSON</span></a></h3><p>Restores the model from checkpoints</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/cluster/k_means.ts#L163" target="_blank" rel="noopener noreferrer">cluster/k_means.ts:163</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>centroids</td><td>number[][]</td><td>null</td><td></td></tr><tr><td>clusters</td><td>number[]</td><td>null</td><td></td></tr><tr><td>options.k</td><td>number</td><td>null</td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-predict" tabindex="-1"><a class="header-anchor" href="#λ-predict"><span>λ predict</span></a></h3><p>Predicts the cluster index with the given X</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/cluster/k_means.ts#L134" target="_blank" rel="noopener noreferrer">cluster/k_means.ts:134</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>array-like or sparse matrix of shape = [n_samples, n_features]</td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[]</p><h3 id="λ-tojson" tabindex="-1"><a class="header-anchor" href="#λ-tojson"><span>λ toJSON</span></a></h3><p>Get the model details in JSON format</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/cluster/k_means.ts#L145" target="_blank" rel="noopener noreferrer">cluster/k_means.ts:145</a></p><p><strong>Returns:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>k</td><td>number</td><td>undefined</td></tr></tbody></table>',43)]))}]]),r=JSON.parse('{"path":"/api/cluster.KMeans.html","title":"cluster.KMeans","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fromJSON","slug":"λ-fromjson","link":"#λ-fromjson","children":[]},{"level":3,"title":"λ predict","slug":"λ-predict","link":"#λ-predict","children":[]},{"level":3,"title":"λ toJSON","slug":"λ-tojson","link":"#λ-tojson","children":[]}],"git":{},"filePathRelative":"api/cluster.KMeans.md"}')}}]);