"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7560],{9950:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>c});var t=a(2288);const p={},e=(0,a(7433).A)(p,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,s[0]||(s[0]=[(0,t.Fv)('<h1 id="metrics-confusion-matrix" tabindex="-1"><a class="header-anchor" href="#metrics-confusion-matrix"><span>metrics.confusion_matrix</span></a></h1><p>â–¸ <strong>confusion_matrix</strong>(y_true: <em>`object`</em>, y_pred: <em>`object`</em>, labels: <em>`object`</em>)</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> confusion_matrix <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/metrics&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> matrix1 <span class="token operator">=</span> <span class="token function">confusion_matrix</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matrix1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ [ 1, 0, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ]</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> matrix2 <span class="token operator">=</span> <span class="token function">confusion_matrix</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bird&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cat&#39;</span><span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matrix2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ [ 1, 2, 0 ], [ 2, 0, 0 ], [ 0, 1, 0 ] ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/metrics/classification.ts#L189" target="_blank" rel="noopener noreferrer">metrics/classification.ts:189</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>y_true</td><td>string[] or number[]</td><td>null</td><td>Ground truth (correct) target values.</td></tr><tr><td>y_pred</td><td>string[] or number[]</td><td>null</td><td>Estimated targets as returned by a classifier.</td></tr><tr><td>options.labels</td><td>any[]</td><td>null</td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[]</p>',9)]))}]]),c=JSON.parse('{"path":"/api/metrics.confusion_matrix.html","title":"metrics.confusion_matrix","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"git":{},"filePathRelative":"api/metrics.confusion_matrix.md"}')}}]);