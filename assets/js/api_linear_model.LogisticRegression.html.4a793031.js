"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9401],{8787:(n,s,t)=>{t.r(s),t.d(s,{comp:()=>r,data:()=>o});var a=t(2288);const e={},r=(0,t(7433).A)(e,[["render",function(n,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="linear-model-logisticregression" tabindex="-1"><a class="header-anchor" href="#linear-model-logisticregression"><span>linear_model.LogisticRegression</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> LogisticRegression <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/linear_model&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> HeartDisease <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/datasets&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> targets <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> heartDisease<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> xTest<span class="token punctuation">,</span> xTrain<span class="token punctuation">,</span> yTest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">train_test_split</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> targets<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">  <span class="token keyword">const</span> lr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LogisticRegression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  lr<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>xTrain<span class="token punctuation">,</span> yTrain<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">  lr<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span>yTest<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fromjson">fromJSON</a></p></li><li><p><a href="#%CE%BB-predict">predict</a></p></li><li><p><a href="#%CE%BB-tojson">toJSON</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>LogisticRegression</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/linear_model/logistic_regression.ts#L42" target="_blank" rel="noopener noreferrer">linear_model/logistic_regression.ts:42</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.learning_rate</td><td>number</td><td>0.001</td><td></td></tr><tr><td>options.num_iterations</td><td>number</td><td>4000</td><td></td></tr></tbody></table><p><strong>Returns:</strong> LogisticRegression</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Fit the model according to the given training data.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/linear_model/logistic_regression.ts#L63" target="_blank" rel="noopener noreferrer">linear_model/logistic_regression.ts:63</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[] or number[][]</td><td>null</td><td>A matrix of samples</td></tr><tr><td>y</td><td>number[]</td><td>null</td><td>A matrix of targets</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fromjson" tabindex="-1"><a class="header-anchor" href="#λ-fromjson"><span>λ fromJSON</span></a></h3><p>Restore the model from a checkpoint</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/linear_model/logistic_regression.ts#L114" target="_blank" rel="noopener noreferrer">linear_model/logistic_regression.ts:114</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.learning_rate</td><td>number</td><td>null</td><td></td></tr><tr><td>options.weights</td><td>number[]</td><td>null</td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-predict" tabindex="-1"><a class="header-anchor" href="#λ-predict"><span>λ predict</span></a></h3><p>Predict class labels for samples in X.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/linear_model/logistic_regression.ts#L83" target="_blank" rel="noopener noreferrer">linear_model/logistic_regression.ts:83</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[] or number[][]</td><td>null</td><td>A matrix of test data</td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[]</p><h3 id="λ-tojson" tabindex="-1"><a class="header-anchor" href="#λ-tojson"><span>λ toJSON</span></a></h3><p>Get the model details in JSON format</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/linear_model/logistic_regression.ts#L95" target="_blank" rel="noopener noreferrer">linear_model/logistic_regression.ts:95</a></p><p><strong>Returns:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>learning_rate</td><td>number</td><td>Model learning rate</td></tr><tr><td>weights</td><td>number[]</td><td>Model training weights</td></tr></tbody></table>',43)]))}]]),o=JSON.parse('{"path":"/api/linear_model.LogisticRegression.html","title":"linear_model.LogisticRegression","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fromJSON","slug":"λ-fromjson","link":"#λ-fromjson","children":[]},{"level":3,"title":"λ predict","slug":"λ-predict","link":"#λ-predict","children":[]},{"level":3,"title":"λ toJSON","slug":"λ-tojson","link":"#λ-tojson","children":[]}],"git":{},"filePathRelative":"api/linear_model.LogisticRegression.md"}')}}]);