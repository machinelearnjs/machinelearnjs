"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8064],{6441:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>o,data:()=>p});var t=s(2288);const e={},o=(0,s(7433).A)(e,[["render",function(n,a){return(0,t.uX)(),(0,t.CE)("div",null,a[0]||(a[0]=[(0,t.Fv)('<h1 id="decomposition-pca" tabindex="-1"><a class="header-anchor" href="#decomposition-pca"><span>decomposition.PCA</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">PCA</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/decomposition&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> pca <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">PCA</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">X</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">pca<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span><span class="token constant">X</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>components<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// result: [ [ 0.7071067811865476, 0.7071067811865474 ], [ 0.7071067811865474, -0.7071067811865476 ] ]</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>explained_variance<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// result: [ [ -0.3535533905932736, 0 ], [ 0, 0.5 ], [ 0.35355339059327373, 0 ] ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h3><ul><li><p><a href="#%E2%96%B8-components">components</a></p></li><li><p><a href="#%E2%96%B8-explained-variance">explained_variance</a></p></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fromjson">fromJSON</a></p></li><li><p><a href="#%CE%BB-predict">predict</a></p></li><li><p><a href="#%CE%BB-tojson">toJSON</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>PCA</strong>()</p><p>Defined in</p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead></table><p><strong>Returns:</strong> PCA</p><h1 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>Properties</span></a></h1><hr><h3 id="▸-components" tabindex="-1"><a class="header-anchor" href="#▸-components"><span>▸ components</span></a></h3><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L31" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:31</a></p><h3 id="▸-explained-variance" tabindex="-1"><a class="header-anchor" href="#▸-explained-variance"><span>▸ explained_variance</span></a></h3><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L38" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:38</a></p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Fit the model with X. At the moment it does not take n_components into consideration so it will only calculate Singular value decomposition</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L46" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:46</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td></td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fromjson" tabindex="-1"><a class="header-anchor" href="#λ-fromjson"><span>λ fromJSON</span></a></h3><p>Restores the model from given states</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L91" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:91</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>components</td><td>number[][]</td><td>null</td><td></td></tr><tr><td>explained_variance</td><td>number[][]</td><td>null</td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-predict" tabindex="-1"><a class="header-anchor" href="#λ-predict"><span>λ predict</span></a></h3><p>Predict does nothing in PCA</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L68" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:68</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>A 2D matrix</td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[][]</p><h3 id="λ-tojson" tabindex="-1"><a class="header-anchor" href="#λ-tojson"><span>λ toJSON</span></a></h3><p>Saves the model&#39;s states</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/decomposition/pca.ts#L76" target="_blank" rel="noopener noreferrer">decomposition/pca.ts:76</a></p><p><strong>Returns:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>components</td><td>number[][]</td><td>undefined</td></tr><tr><td>explained_variance</td><td>number[][]</td><td>undefined</td></tr></tbody></table>',51)]))}]]),p=JSON.parse('{"path":"/api/decomposition.PCA.html","title":"decomposition.PCA","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"▸ components","slug":"▸-components","link":"#▸-components","children":[]},{"level":3,"title":"▸ explained_variance","slug":"▸-explained-variance","link":"#▸-explained-variance","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fromJSON","slug":"λ-fromjson","link":"#λ-fromjson","children":[]},{"level":3,"title":"λ predict","slug":"λ-predict","link":"#λ-predict","children":[]},{"level":3,"title":"λ toJSON","slug":"λ-tojson","link":"#λ-tojson","children":[]}],"git":{},"filePathRelative":"api/decomposition.PCA.md"}')}}]);