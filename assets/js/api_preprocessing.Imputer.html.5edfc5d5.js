"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8317],{2560:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>p,data:()=>r});var t=a(2288);const e={},p=(0,a(7433).A)(e,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,s[0]||(s[0]=[(0,t.Fv)('<h1 id="preprocessing-imputer" tabindex="-1"><a class="header-anchor" href="#preprocessing-imputer"><span>preprocessing.Imputer</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Imputer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;preprocessing/Imputer&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> testX <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> imp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Imputer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> missingValues<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> axis<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">imp<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>testX<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> impResult <span class="token operator">=</span> imp<span class="token punctuation">.</span><span class="token function">fit_transform</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// [ [ 4, 2 ], [ 6, 3.6666666666666665 ], [ 7, 6 ] ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fit-transform">fit_transform</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>Imputer</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/preprocessing/Imputer.ts#L33" target="_blank" rel="noopener noreferrer">preprocessing/Imputer.ts:33</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.axis</td><td>number</td><td>0</td><td></td></tr><tr><td>options.copy</td><td>boolean</td><td>false</td><td></td></tr><tr><td>options.missingValues</td><td>any</td><td>null</td><td></td></tr><tr><td>options.strategy</td><td>string</td><td>&#39;mean&#39;</td><td></td></tr></tbody></table><p><strong>Returns:</strong> Imputer</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Fit the imputer on X.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/preprocessing/Imputer.ts#L52" target="_blank" rel="noopener noreferrer">preprocessing/Imputer.ts:52</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>any[][]</td><td>null</td><td>Input data in array or sparse matrix format</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fit-transform" tabindex="-1"><a class="header-anchor" href="#λ-fit-transform"><span>λ fit_transform</span></a></h3><p>Fit to data, then transform it.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/preprocessing/Imputer.ts#L78" target="_blank" rel="noopener noreferrer">preprocessing/Imputer.ts:78</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>any[][]</td><td>null</td><td>Input data in array or sparse matrix format</td></tr></tbody></table><p><strong>Returns:</strong></p><p>any[]</p>',31)]))}]]),r=JSON.parse('{"path":"/api/preprocessing.Imputer.html","title":"preprocessing.Imputer","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fit_transform","slug":"λ-fit-transform","link":"#λ-fit-transform","children":[]}],"git":{},"filePathRelative":"api/preprocessing.Imputer.md"}')}}]);