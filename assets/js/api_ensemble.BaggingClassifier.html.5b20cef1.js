"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1928],{5497:(t,n,s)=>{s.r(n),s.d(n,{comp:()=>r,data:()=>d});var a=s(2288);const e={},r=(0,s(7433).A)(e,[["render",function(t,n){return(0,a.uX)(),(0,a.CE)("div",null,n[0]||(n[0]=[(0,a.Fv)('<h1 id="ensemble-baggingclassifier" tabindex="-1"><a class="header-anchor" href="#ensemble-baggingclassifier"><span>ensemble.BaggingClassifier</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> classifier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaggingClassifier</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line"> baseEstimator<span class="token operator">:</span> LogisticRegression<span class="token punctuation">,</span></span>\n<span class="line"> maxSamples<span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">X</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">classifier<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span><span class="token constant">X</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">classifier<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span><span class="token constant">X</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fromjson">fromJSON</a></p></li><li><p><a href="#%CE%BB-predict">predict</a></p></li><li><p><a href="#%CE%BB-tojson">toJSON</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>BaggingClassifier</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/ensemble/bagging.ts#L58" target="_blank" rel="noopener noreferrer">ensemble/bagging.ts:58</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.baseEstimator</td><td>any</td><td>DecisionTreeClassifier</td><td></td></tr><tr><td>options.bootstrapFeatures</td><td>boolean</td><td>false</td><td></td></tr><tr><td>options.bootstrapSamples</td><td>boolean</td><td>false</td><td></td></tr><tr><td>options.estimatorOptions</td><td>any</td><td>{}</td><td></td></tr><tr><td>options.maxFeatures</td><td>number</td><td>1.0</td><td></td></tr><tr><td>options.maxFeaturesIsFloating</td><td>boolean</td><td>true</td><td></td></tr><tr><td>options.maxSamples</td><td>number</td><td>1.0</td><td></td></tr><tr><td>options.maxSamplesIsFloating</td><td>boolean</td><td>true</td><td></td></tr><tr><td>options.numEstimators</td><td>number</td><td>10</td><td></td></tr></tbody></table><p><strong>Returns:</strong> BaggingClassifier</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Builds an ensemble of base classifier from the training set (X, y).</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/ensemble/bagging.ts#L108" target="_blank" rel="noopener noreferrer">ensemble/bagging.ts:108</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>array-like or sparse matrix of shape = [n_samples, n_features]</td></tr><tr><td>y</td><td>number[]</td><td>null</td><td>array-like, shape = [n_samples]</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fromjson" tabindex="-1"><a class="header-anchor" href="#λ-fromjson"><span>λ fromJSON</span></a></h3><p>Restore the model from a checkpoint</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/ensemble/bagging.ts#L193" target="_blank" rel="noopener noreferrer">ensemble/bagging.ts:193</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.baseEstimator</td><td>any</td><td></td><td></td></tr><tr><td>options.bootstrapFeatures</td><td>boolean</td><td></td><td></td></tr><tr><td>options.bootstrapSamples</td><td>boolean</td><td></td><td></td></tr><tr><td>options.estimatorOptions</td><td>any</td><td></td><td></td></tr><tr><td>options.estimators</td><td>any[]</td><td></td><td></td></tr><tr><td>options.estimatorsFeatures</td><td>number[][]</td><td></td><td></td></tr><tr><td>options.maxFeatures</td><td>number</td><td></td><td></td></tr><tr><td>options.maxFeaturesIsFloating</td><td>boolean</td><td></td><td></td></tr><tr><td>options.maxSamples</td><td>number</td><td></td><td></td></tr><tr><td>options.maxSamplesIsFloating</td><td>boolean</td><td></td><td></td></tr><tr><td>options.numEstimators</td><td>number</td><td></td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-predict" tabindex="-1"><a class="header-anchor" href="#λ-predict"><span>λ predict</span></a></h3><p>Predict class for each row in X.</p><p>Predictions are formed using the majority voting.</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/ensemble/bagging.ts#L137" target="_blank" rel="noopener noreferrer">ensemble/bagging.ts:137</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>array-like or sparse matrix of shape = [n_samples, n_features]</td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[]</p><h3 id="λ-tojson" tabindex="-1"><a class="header-anchor" href="#λ-tojson"><span>λ toJSON</span></a></h3><p>Get the model details in JSON format</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/ensemble/bagging.ts#L161" target="_blank" rel="noopener noreferrer">ensemble/bagging.ts:161</a></p><p><strong>Returns:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>baseEstimator</td><td>any</td><td>undefined</td></tr><tr><td>bootstrapFeatures</td><td>boolean</td><td>undefined</td></tr><tr><td>bootstrapSamples</td><td>boolean</td><td>undefined</td></tr><tr><td>estimatorOptions</td><td>any</td><td>undefined</td></tr><tr><td>estimators</td><td>any[]</td><td>undefined</td></tr><tr><td>estimatorsFeatures</td><td>number[][]</td><td>undefined</td></tr><tr><td>maxFeatures</td><td>number</td><td>undefined</td></tr><tr><td>maxFeaturesIsFloating</td><td>boolean</td><td>undefined</td></tr><tr><td>maxSamples</td><td>number</td><td>undefined</td></tr><tr><td>maxSamplesIsFloating</td><td>boolean</td><td>undefined</td></tr><tr><td>numEstimators</td><td>number</td><td>undefined</td></tr></tbody></table>',44)]))}]]),d=JSON.parse('{"path":"/api/ensemble.BaggingClassifier.html","title":"ensemble.BaggingClassifier","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fromJSON","slug":"λ-fromjson","link":"#λ-fromjson","children":[]},{"level":3,"title":"λ predict","slug":"λ-predict","link":"#λ-predict","children":[]},{"level":3,"title":"λ toJSON","slug":"λ-tojson","link":"#λ-tojson","children":[]}],"git":{},"filePathRelative":"api/ensemble.BaggingClassifier.md"}')}}]);