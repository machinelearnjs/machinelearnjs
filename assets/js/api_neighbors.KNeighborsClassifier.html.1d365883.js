"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6843],{9408:(n,s,t)=>{t.r(s),t.d(s,{comp:()=>o,data:()=>p});var a=t(2288);const e={},o=(0,t(7433).A)(e,[["render",function(n,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="neighbors-kneighborsclassifier" tabindex="-1"><a class="header-anchor" href="#neighbors-kneighborsclassifier"><span>neighbors.KNeighborsClassifier</span></a></h1><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> knn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KNeighborsClassifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">X</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">knn<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span><span class="token constant">X</span> <span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>knn<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// predicts 1</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3><ul><li><a href="#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h3><ul><li><p><a href="#%CE%BB-fit">fit</a></p></li><li><p><a href="#%CE%BB-fromjson">fromJSON</a></p></li><li><p><a href="#%CE%BB-predict">predict</a></p></li><li><p><a href="#%CE%BB-tojson">toJSON</a></p></li></ul><h1 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1"><span>Constructors</span></a></h1><hr><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>constructor</span></a></h3><p>⊕ <strong>KNeighborsClassifier</strong>(__namedParameters: <em>`object`</em>)</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/neighbors/classification.ts#L34" target="_blank" rel="noopener noreferrer">neighbors/classification.ts:34</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.distance</td><td>string</td><td>DIST_EUC</td><td></td></tr><tr><td>options.k</td><td>number</td><td>0</td><td></td></tr><tr><td>options.type</td><td>string</td><td>TYPE_KD</td><td></td></tr></tbody></table><p><strong>Returns:</strong> KNeighborsClassifier</p><h1 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h1><hr><h3 id="λ-fit" tabindex="-1"><a class="header-anchor" href="#λ-fit"><span>λ fit</span></a></h3><p>Train the classifier with input and output data</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/neighbors/classification.ts#L74" target="_blank" rel="noopener noreferrer">neighbors/classification.ts:74</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>unknown</td><td></td><td>Training data.</td></tr><tr><td>y</td><td>unknown</td><td></td><td>Target data.</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-fromjson" tabindex="-1"><a class="header-anchor" href="#λ-fromjson"><span>λ fromJSON</span></a></h3><p>Restores the model from a JSON checkpoint</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/neighbors/classification.ts#L141" target="_blank" rel="noopener noreferrer">neighbors/classification.ts:141</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>options.classes</td><td>any</td><td>null</td><td></td></tr><tr><td>options.distance</td><td>any</td><td>null</td><td></td></tr><tr><td>options.k</td><td>any</td><td>null</td><td></td></tr><tr><td>options.tree</td><td>any</td><td>null</td><td></td></tr><tr><td>options.type</td><td>any</td><td>null</td><td></td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p><h3 id="λ-predict" tabindex="-1"><a class="header-anchor" href="#λ-predict"><span>λ predict</span></a></h3><p>Predict single value from a list of data</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/neighbors/classification.ts#L157" target="_blank" rel="noopener noreferrer">neighbors/classification.ts:157</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>T[] or T[][]</td><td></td><td>Prediction data.</td></tr></tbody></table><p><strong>Returns:</strong></p><p>any</p><h3 id="λ-tojson" tabindex="-1"><a class="header-anchor" href="#λ-tojson"><span>λ toJSON</span></a></h3><p>Return the model&#39;s state as a JSON object</p><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/neighbors/classification.ts#L102" target="_blank" rel="noopener noreferrer">neighbors/classification.ts:102</a></p><p><strong>Returns:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>classes</td><td>any[]</td><td>classes used for KNN tree</td></tr><tr><td>distance</td><td>any</td><td>Choice of distance function, should choose between euclidean</td></tr><tr><td>k</td><td>number</td><td>Number of neighbors to classify</td></tr><tr><td>tree</td><td>any</td><td>KNN tree</td></tr><tr><td>type</td><td>string</td><td>Type of algorithm to use, choose between kdtree(default)</td></tr></tbody></table>',43)]))}]]),p=JSON.parse('{"path":"/api/neighbors.KNeighborsClassifier.html","title":"neighbors.KNeighborsClassifier","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"λ fit","slug":"λ-fit","link":"#λ-fit","children":[]},{"level":3,"title":"λ fromJSON","slug":"λ-fromjson","link":"#λ-fromjson","children":[]},{"level":3,"title":"λ predict","slug":"λ-predict","link":"#λ-predict","children":[]},{"level":3,"title":"λ toJSON","slug":"λ-tojson","link":"#λ-tojson","children":[]}],"git":{},"filePathRelative":"api/neighbors.KNeighborsClassifier.md"}')}}]);