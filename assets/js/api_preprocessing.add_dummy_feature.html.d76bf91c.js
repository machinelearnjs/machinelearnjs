"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4568],{6501:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>p,data:()=>r});var e=s(2288);const t={},p=(0,s(7433).A)(t,[["render",function(n,a){return(0,e.uX)(),(0,e.CE)("div",null,a[0]||(a[0]=[(0,e.Fv)('<h1 id="preprocessing-add-dummy-feature" tabindex="-1"><a class="header-anchor" href="#preprocessing-add-dummy-feature"><span>preprocessing.add_dummy_feature</span></a></h1><p>â–¸ <strong>add_dummy_feature</strong>(X: <em>`object`</em>, value: <em>`object`</em>)</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> add_dummy_feature <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;machinelearn/preprocessing&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> dummy <span class="token operator">=</span> <span class="token function">add_dummy_feature</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dummy<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns: [ [ 1, 0, 1, 2 ], [ 1, 1, 0, 3 ] ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Defined in <a href="https://github.com/machinelearnjs/machinelearnjs/blob/master/src/lib/preprocessing/data.ts#L56" target="_blank" rel="noopener noreferrer">preprocessing/data.ts:56</a></p><p><strong>Parameters:</strong></p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>number[][]</td><td>null</td><td>A matrix of data</td></tr><tr><td>value</td><td>number</td><td>1.0</td><td>Value to use for the dummy feature.</td></tr></tbody></table><p><strong>Returns:</strong></p><p>number[][]</p>',9)]))}]]),r=JSON.parse('{"path":"/api/preprocessing.add_dummy_feature.html","title":"preprocessing.add_dummy_feature","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"git":{},"filePathRelative":"api/preprocessing.add_dummy_feature.md"}')}}]);